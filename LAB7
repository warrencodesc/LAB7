#include <stdio.h>

// bubble Sort function that also counts swaps
void bubbleSort(int arr[], int n, int swaps[]) {
    int i, j, temp;
    for (i = 0; i < n-1; i++) {
        for (j = 0; j < n-i-1; j++) {
            // swap if the current element is greater than the next one
            if (arr[j] > arr[j+1]) {
                temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
                // We increment swap count for both swapped elements
                swaps[arr[j]]++;
                swaps[arr[j+1]]++;
            }
        }
    }
}

// selection sort and count swaps
void selectionSort(int arr[], int n, int swaps[]) {
    int i, j, minIndex, temp;
    for (i = 0; i < n-1; i++) {
        minIndex = i;
        // find index of the minimum element in the unsorted part of the array
        for (j = i+1; j < n; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        // We swap the minimum element with the first element of the unsorted part
        temp = arr[minIndex];
        arr[minIndex] = arr[i];
        arr[i] = temp;
        // We increment the swap count for both swapped elements
        swaps[arr[i]]++;
        swaps[arr[minIndex]]++;
    }
}

int main() {
    // We define arrays
    int array1[] = {97, 16, 45, 63, 13, 22, 7, 58, 72};
    int array2[] = {90, 80, 70, 60, 50, 40, 30, 20, 10};
    int n1 = sizeof(array1) / sizeof(array1[0]); // Calculate the size of array1
    int n2 = sizeof(array2) / sizeof(array2[0]); // Calculate the size of array2

    // initialize arrays to store swap counts, assuming maximum value in array is 99
    int swaps1[100] = {0};
    int swaps2[100] = {0};

    // sort array1 using bubble sort and also count swaps
    bubbleSort(array1, n1, swaps1);
    // sort array2 using bubble sort and also count swaps
    bubbleSort(array2, n2, swaps2);

    // print swap counts for array1
    printf("array1:\n");
    for (int i = 0; i < n1; i++) {
        printf("%d: # of times %d is swapped\n", array1[i], swaps1[array1[i]]);
    }
    // calculate and print the total number of swaps for array1
    int total_swaps1 = 0;
    for (int i = 0; i < n1; i++) {
        total_swaps1 += swaps1[array1[i]];
    }
    printf("total # of swaps: %d\n", total_swaps1);

    // print swap counts for array2
    printf("\narray2:\n");
    for (int i = 0; i < n2; i++) {
        printf("%d: # of times %d is swapped\n", array2[i], swaps2[array2[i]]);
    }
    // calculate and print the total number of swaps for array2
    int total_swaps2 = 0;
    for (int i = 0; i < n2; i++) {
        total_swaps2 += swaps2[array2[i]];
    }
    printf("total # of swaps: %d\n", total_swaps2);

    return 0; //We return 
}
